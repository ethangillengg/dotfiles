# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  pkgs,
  ...
}: let
  mediaserverMountOpts = {
    device = "/dev/disk/by-uuid/45efa216-f3b6-4925-89c8-2a30845e95cf";
    fsType = "btrfs";
  };
in {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  services.xserver.videoDrivers = ["amdgpu"];
  hardware.graphics = {
    enable = true;
    enable32Bit = true;

    extraPackages = with pkgs; [
      amdvlk
    ];
    # For 32 bit applications
    extraPackages32 = with pkgs; [
      driversi686Linux.amdvlk
    ];
  };
  # hardware.nvidia = {
  #   package = config.boot.kernelPackages.nvidiaPackages.production;
  #   # Modesetting is required.
  #   modesetting.enable = true;
  #   powerManagement = {
  #     # Nvidia power management. Experimental, and can cause sleep/suspend to fail.
  #     enable = true;
  #     # Fine-grained power management. Turns off GPU when not in use.
  #     # Experimental and only works on modern Nvidia GPUs (Turing or newer).
  #     finegrained = false;
  #   };
  #
  #   # Use the NVidia open source kernel module (not to be confused with the
  #   # independent third-party "nouveau" open source driver).
  #   # Support is limited to the Turing and later architectures. Full list of
  #   # supported GPUs is at:
  #   # https://github.com/NVIDIA/open-gpu-kernel-modules#compatible-gpus
  #   # Only available from driver 515.43.04+
  #   # Currently alpha-quality/buggy, so false is currently the recommended setting.
  #   open = false;
  #
  #   # Enable the Nvidia settings menu,
  #   # accessible via `nvidia-settings`.
  #   nvidiaSettings = true;
  # };

  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  # boot.loader.grub = {
  #   enable = true;
  #   version = 2;
  #   device = "nodev";
  #   efiSupport = true;
  #   enableCryptodisk = true;
  # };
  boot.loader.efi.efiSysMountPoint = "/boot";
  boot.supportedFilesystems = ["btrfs" "ntfs"];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  boot.initrd.luks.devices.enc = {
    device = "/dev/disk/by-uuid/bff14bf9-4454-431a-a1d2-e1a121364799";
    allowDiscards = true;
    bypassWorkqueues = true;
    preLVM = true;
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/858180cd-fe08-4fbc-ab6d-4918fbedb5d0";
      fsType = "btrfs";
      options = ["subvol=root" "compress=zstd" "noatime"];
    };

    "/home" = {
      device = "/dev/disk/by-uuid/858180cd-fe08-4fbc-ab6d-4918fbedb5d0";
      fsType = "btrfs";
      options = ["subvol=home" "compress=zstd" "noatime"];
    };

    "/nix" = {
      device = "/dev/disk/by-uuid/858180cd-fe08-4fbc-ab6d-4918fbedb5d0";
      fsType = "btrfs";
      options = ["subvol=nix" "compress=zstd" "noatime"];
    };

    "/var/log" = {
      device = "/dev/disk/by-uuid/858180cd-fe08-4fbc-ab6d-4918fbedb5d0";
      fsType = "btrfs";
      options = ["subvol=log" "compress=zstd" "noatime"];
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/F524-0603";
      fsType = "vfat";
      options = ["fmask=0022" "dmask=0022"];
    };

    "/mediaserver/media" =
      {
        options = ["subvol=media"];
      }
      // mediaserverMountOpts;

    "/mediaserver/other" =
      {
        options = ["subvol=other"];
      }
      // mediaserverMountOpts;

    "/mediaserver/torrents" =
      {
        options = ["subvol=torrents"];
      }
      // mediaserverMountOpts;

    "/mediaserver/usenet" =
      {
        options = ["subvol=usenet"];
      }
      // mediaserverMountOpts;

    "/export/media" = {
      device = "/mediaserver/media";
      options = ["bind"];
    };

    # "/" = {
    #   device = "/dev/disk/by-uuid/c83ed483-6172-4ab8-af7f-783766dc07f9";
    #   fsType = "btrfs";
    # };
    # "/boot/efi" = {
    #   device = "/dev/disk/by-uuid/E618-9977";
    #   fsType = "vfat";
    # };
  };

  swapDevices = [{device = "/dev/disk/by-uuid/366afe57-3fb9-4204-8f4a-0f78374a8e1b";}];
  networking.useDHCP = false; # static ip
  networking.enableIPv6 = true; # WGNORD breaks if this is disabled

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
